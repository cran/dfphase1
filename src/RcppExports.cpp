// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// alasso
LogicalVector alasso(NumericMatrix x, NumericVector y, double gamma, double P);
RcppExport SEXP _dfphase1_alasso(SEXP xSEXP, SEXP ySEXP, SEXP gammaSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(alasso(x, y, gamma, P));
    return rcpp_result_gen;
END_RCPP
}
// MPHASE1
List MPHASE1(NumericVector xx, bool isolated, bool step, int ncp, int lmin, int nperm);
RcppExport SEXP _dfphase1_MPHASE1(SEXP xxSEXP, SEXP isolatedSEXP, SEXP stepSEXP, SEXP ncpSEXP, SEXP lminSEXP, SEXP npermSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xx(xxSEXP);
    Rcpp::traits::input_parameter< bool >::type isolated(isolatedSEXP);
    Rcpp::traits::input_parameter< bool >::type step(stepSEXP);
    Rcpp::traits::input_parameter< int >::type ncp(ncpSEXP);
    Rcpp::traits::input_parameter< int >::type lmin(lminSEXP);
    Rcpp::traits::input_parameter< int >::type nperm(npermSEXP);
    rcpp_result_gen = Rcpp::wrap(MPHASE1(xx, isolated, step, ncp, lmin, nperm));
    return rcpp_result_gen;
END_RCPP
}
// ggrscore
List ggrscore(NumericVector x, std::string score, bool within, int iter);
RcppExport SEXP _dfphase1_ggrscore(SEXP xSEXP, SEXP scoreSEXP, SEXP withinSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< bool >::type within(withinSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    rcpp_result_gen = Rcpp::wrap(ggrscore(x, score, within, iter));
    return rcpp_result_gen;
END_RCPP
}
// ggdepthranks
List ggdepthranks(NumericVector x, int L);
RcppExport SEXP _dfphase1_ggdepthranks(SEXP xSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(ggdepthranks(x, L));
    return rcpp_result_gen;
END_RCPP
}
// ggclassicmshewhart
List ggclassicmshewhart(NumericVector x, std::string stat, std::string score, int L);
RcppExport SEXP _dfphase1_ggclassicmshewhart(SEXP xSEXP, SEXP statSEXP, SEXP scoreSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type stat(statSEXP);
    Rcpp::traits::input_parameter< std::string >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(ggclassicmshewhart(x, stat, score, L));
    return rcpp_result_gen;
END_RCPP
}
// ggscore2mshewhart
List ggscore2mshewhart(NumericVector x, std::string stat, int L);
RcppExport SEXP _dfphase1_ggscore2mshewhart(SEXP xSEXP, SEXP statSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type stat(statSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(ggscore2mshewhart(x, stat, L));
    return rcpp_result_gen;
END_RCPP
}
// ggglrchart
List ggglrchart(NumericVector x, bool onlymean, int L);
RcppExport SEXP _dfphase1_ggglrchart(SEXP xSEXP, SEXP onlymeanSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type onlymean(onlymeanSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(ggglrchart(x, onlymean, L));
    return rcpp_result_gen;
END_RCPP
}
// ggdotrsp
List ggdotrsp(IntegerVector ripar, NumericVector rry);
RcppExport SEXP _dfphase1_ggdotrsp(SEXP riparSEXP, SEXP rrySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ripar(riparSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rry(rrySEXP);
    rcpp_result_gen = Rcpp::wrap(ggdotrsp(ripar, rry));
    return rcpp_result_gen;
END_RCPP
}
// ggstepfactor
IntegerVector ggstepfactor(int m, int level, IntegerVector rsteps);
RcppExport SEXP _dfphase1_ggstepfactor(SEXP mSEXP, SEXP levelSEXP, SEXP rstepsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type level(levelSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rsteps(rstepsSEXP);
    rcpp_result_gen = Rcpp::wrap(ggstepfactor(m, level, rsteps));
    return rcpp_result_gen;
END_RCPP
}
// ggxbars
List ggxbars(NumericMatrix x, bool aggr_with_mean, int L);
RcppExport SEXP _dfphase1_ggxbars(SEXP xSEXP, SEXP aggr_with_meanSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type aggr_with_mean(aggr_with_meanSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(ggxbars(x, aggr_with_mean, L));
    return rcpp_result_gen;
END_RCPP
}
// ggxbarsall
NumericMatrix ggxbarsall(int n, int m, bool aggr_with_mean, int rep);
RcppExport SEXP _dfphase1_ggxbarsall(SEXP nSEXP, SEXP mSEXP, SEXP aggr_with_meanSEXP, SEXP repSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< bool >::type aggr_with_mean(aggr_with_meanSEXP);
    Rcpp::traits::input_parameter< int >::type rep(repSEXP);
    rcpp_result_gen = Rcpp::wrap(ggxbarsall(n, m, aggr_with_mean, rep));
    return rcpp_result_gen;
END_RCPP
}
// ggrank
List ggrank(NumericMatrix x, int L);
RcppExport SEXP _dfphase1_ggrank(SEXP xSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(ggrank(x, L));
    return rcpp_result_gen;
END_RCPP
}
// ggrankall
NumericMatrix ggrankall(int n, int m, int rep);
RcppExport SEXP _dfphase1_ggrankall(SEXP nSEXP, SEXP mSEXP, SEXP repSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type rep(repSEXP);
    rcpp_result_gen = Rcpp::wrap(ggrankall(n, m, rep));
    return rcpp_result_gen;
END_RCPP
}
// gglepagecucconi
List gglepagecucconi(NumericMatrix x, int L, bool lepage);
RcppExport SEXP _dfphase1_gglepagecucconi(SEXP xSEXP, SEXP LSEXP, SEXP lepageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< bool >::type lepage(lepageSEXP);
    rcpp_result_gen = Rcpp::wrap(gglepagecucconi(x, L, lepage));
    return rcpp_result_gen;
END_RCPP
}
// gglepagecucconiall
NumericVector gglepagecucconiall(int n, int m, int rep, bool lepage);
RcppExport SEXP _dfphase1_gglepagecucconiall(SEXP nSEXP, SEXP mSEXP, SEXP repSEXP, SEXP lepageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type rep(repSEXP);
    Rcpp::traits::input_parameter< bool >::type lepage(lepageSEXP);
    rcpp_result_gen = Rcpp::wrap(gglepagecucconiall(n, m, rep, lepage));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dfphase1_alasso", (DL_FUNC) &_dfphase1_alasso, 4},
    {"_dfphase1_MPHASE1", (DL_FUNC) &_dfphase1_MPHASE1, 6},
    {"_dfphase1_ggrscore", (DL_FUNC) &_dfphase1_ggrscore, 4},
    {"_dfphase1_ggdepthranks", (DL_FUNC) &_dfphase1_ggdepthranks, 2},
    {"_dfphase1_ggclassicmshewhart", (DL_FUNC) &_dfphase1_ggclassicmshewhart, 4},
    {"_dfphase1_ggscore2mshewhart", (DL_FUNC) &_dfphase1_ggscore2mshewhart, 3},
    {"_dfphase1_ggglrchart", (DL_FUNC) &_dfphase1_ggglrchart, 3},
    {"_dfphase1_ggdotrsp", (DL_FUNC) &_dfphase1_ggdotrsp, 2},
    {"_dfphase1_ggstepfactor", (DL_FUNC) &_dfphase1_ggstepfactor, 3},
    {"_dfphase1_ggxbars", (DL_FUNC) &_dfphase1_ggxbars, 3},
    {"_dfphase1_ggxbarsall", (DL_FUNC) &_dfphase1_ggxbarsall, 4},
    {"_dfphase1_ggrank", (DL_FUNC) &_dfphase1_ggrank, 2},
    {"_dfphase1_ggrankall", (DL_FUNC) &_dfphase1_ggrankall, 3},
    {"_dfphase1_gglepagecucconi", (DL_FUNC) &_dfphase1_gglepagecucconi, 3},
    {"_dfphase1_gglepagecucconiall", (DL_FUNC) &_dfphase1_gglepagecucconiall, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_dfphase1(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
